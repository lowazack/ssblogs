/**
 * Alignment.
 *
 * The classes are named using the format:
 * .{property}-{value}
 * .{property}-{breakpoint}-{value}
 *
 * Examples:
 * .ta-r        # text-align: right;
 * .ta-c        # text-align: center;
 * .ta-md-l     # text-align: left;       # Medium up.
 * .ta-lg-c     # text-align: center;     # Large up.
 *
 * Important has been declared for each statement. This is to override any other
 * selectors that may be making use of the same property. This is a utility
 * class. If you don't want this overriding, remove the class from your HTML
 * element.
 *
 * Variables that can be overridden:
 *  - $alignment--breakpoints   # Breakpoints catered for.
 */

// CSS properties.
$alignment--properties: (
  'ta': 'text-align',
  'tal': 'text-align-last',
);

// Which direction for the property.
$alignment--direction: (
  'r':    'right',
  'l':    'left',
  'c':    'center',
  'j':    'justify',
);

// The breakpoints.
$alignment--breakpoints: (
  'sm':   'small-up',
  'md':   'medium-up',
  'lg':   'large-up',
  'smo':  'small-only',
  'mdo':  'medium-only',
) !default;


/**
 * Loop css properties (text-align).
 */
@each $property-key, $property-value in $alignment--properties {

  /**
   * Loop directions (left, right, center, justify).
   * Outside of breakpoint.
   */
  @each $direction-key, $direction-value in $alignment--direction {
    // Cater for all directions here - .{property}-{value}.
    .#{$property-key}-#{$direction-key} {
      #{$property-value}: #{$direction-value} !important;
    }
  }

  /**
   * Loop breakpoints (small, medium, large...).
   */
  @each $breakpoint-key, $breakpoint-value in $alignment--breakpoints {

    // Cater for breakpoints here - .{property}-{breakpoint}-{value}.
    @include breakpoint($breakpoint-value){

      /**
       * Loop directions (left, right, center, justify).
       */
      @each $direction-key, $direction-value in $alignment--direction {
        .#{$property-key}-#{$breakpoint-key}-#{$direction-key} {
          #{$property-value}: #{$direction-value} !important;
        }
      }
    }
  }
}